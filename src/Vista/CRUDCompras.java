/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.SQL_Compra;
import Modelo.Compras;
import DataBase.Conexion;
import Modelo.Ropa;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author axel
 */
public class CRUDCompras extends javax.swing.JFrame {

    /**
     * Creates new form CRUDVenta
     */
    public CRUDCompras() {
        initComponents();
        CargarTabla();
    }
    private void CargarTabla()
    {
        SQL_Compra modSql = new SQL_Compra();
        DefaultTableModel modelotabla = (DefaultTableModel) tablaCompras.getModel();
        modelotabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        java.sql.ResultSetMetaData rsmd;
        int columnas;
        //724 tamano tabla de forma horizontal
        int[] anchos = {40,40,40,50,50,50,150,70,80,110};
        for(int i = 0; i<tablaCompras.getColumnCount(); i++)
        {
            tablaCompras.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        try
        {
            Connection con = Conexion.getCon();
            //String consultaSQL = "SELECT idropa, nombre, descripcion, precio, genero, marca FROM ropa";
            String consultaSQL = "select IdCompra, IdProveedor, idropa, FechaCompra, MontoCompra, cantidad, DescripcionCompra from Compra;";
            ps = con.prepareStatement(consultaSQL);
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            Object[] fila = new Object[columnas];
            while(rs.next())
            {
                fila[0] = rs.getInt(1);
                fila[1] = rs.getInt(2);
                fila[2] = rs.getInt(3);
                fila[3] = rs.getString(4);
                fila[4] = rs.getString(5);
                fila[5] = rs.getInt(6);
                fila[6] = rs.getString(7);
                modelotabla.addRow(fila);
            }
            Registros.setText("Mostrados " + modSql.total() );
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    //////////////////////////////////////////////
    private void limpiar(){
        id.setText("ID");
        txtIdProveedor.setText("");
        txtDescripcionCompra.setText("");
        txtFechaCompra.setText("");
        txtMontoCompra.setText("");
        txtidropa.setText("");
        txtcantidad.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneles = new javax.swing.JTabbedPane();
        ListadoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbfiltro = new javax.swing.JComboBox<>();
        txtBuscar = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnRestablecerTabla = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        Registros = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCompras = new javax.swing.JTable();
        OperacionesPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        idropa = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMontoCompra = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFechaCompra = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDescripcionCompra = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtIdProveedor = new javax.swing.JTextField();
        btnproveedores = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtcantidad = new javax.swing.JTextField();
        txtidropa = new javax.swing.JTextField();
        btnropa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("<Volver al menu");

        jLabel2.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Listado de Compras");

        cmbfiltro.setFont(new java.awt.Font("SimSun", 0, 12)); // NOI18N
        cmbfiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "idVenta", "idRopa", "folioVenta", "Fecha", "Total", "Descuento", "IVA", "Estado" }));

        txtBuscar.setFont(new java.awt.Font("SimSun", 0, 12)); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        btnNuevo.setBackground(new java.awt.Color(0, 153, 153));
        btnNuevo.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnRestablecerTabla.setBackground(new java.awt.Color(0, 153, 153));
        btnRestablecerTabla.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        btnRestablecerTabla.setForeground(new java.awt.Color(255, 255, 255));
        btnRestablecerTabla.setText("Restablecer tabla");
        btnRestablecerTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestablecerTablaActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(0, 153, 153));
        btnBuscar.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        Registros.setFont(new java.awt.Font("SimSun", 1, 12)); // NOI18N
        Registros.setForeground(new java.awt.Color(51, 51, 255));
        Registros.setText("Registros");

        tablaCompras.setFont(new java.awt.Font("SimSun", 0, 12)); // NOI18N
        tablaCompras.setForeground(new java.awt.Color(0, 102, 102));
        tablaCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdCompra", "IdProveedor", "idRopa", "FechaCompra", "MontoCompra", "Cantidad", "DescripcionCompra"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaComprasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCompras);

        javax.swing.GroupLayout ListadoPanelLayout = new javax.swing.GroupLayout(ListadoPanel);
        ListadoPanel.setLayout(ListadoPanelLayout);
        ListadoPanelLayout.setHorizontalGroup(
            ListadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ListadoPanelLayout.createSequentialGroup()
                .addGroup(ListadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(ListadoPanelLayout.createSequentialGroup()
                        .addComponent(cmbfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar))
                    .addGroup(ListadoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ListadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                            .addGroup(ListadoPanelLayout.createSequentialGroup()
                                .addComponent(btnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRestablecerTabla)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(ListadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Registros, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ListadoPanelLayout.setVerticalGroup(
            ListadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListadoPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ListadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ListadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnRestablecerTabla))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Registros)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        paneles.addTab("Listado", ListadoPanel);

        OperacionesPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setBackground(new java.awt.Color(0, 153, 153));
        jLabel4.setFont(new java.awt.Font("SimSun", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Datos de Compras");

        id.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        id.setForeground(new java.awt.Color(0, 102, 102));
        id.setText("ID");

        idropa.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        idropa.setForeground(new java.awt.Color(0, 102, 102));
        idropa.setText("ID-Proveedor");

        jLabel7.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Monto Compra");

        jLabel8.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Fecha");

        txtFechaCompra.setText("yy-mm-dd");

        jLabel9.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Descripción");

        btnAgregar.setBackground(new java.awt.Color(0, 153, 153));
        btnAgregar.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 153));
        jButton3.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnproveedores.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        btnproveedores.setForeground(new java.awt.Color(0, 102, 102));
        btnproveedores.setText("...");
        btnproveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnproveedoresActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Cantidad");

        jLabel11.setFont(new java.awt.Font("SimSun", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("ID-Ropa");

        btnropa.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        btnropa.setForeground(new java.awt.Color(0, 102, 102));
        btnropa.setText("...");
        btnropa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnropaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OperacionesPanelLayout = new javax.swing.GroupLayout(OperacionesPanel);
        OperacionesPanel.setLayout(OperacionesPanelLayout);
        OperacionesPanelLayout.setHorizontalGroup(
            OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperacionesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OperacionesPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OperacionesPanelLayout.createSequentialGroup()
                        .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(OperacionesPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDescripcionCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(OperacionesPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(txtMontoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtFechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(115, 115, 115))
                    .addGroup(OperacionesPanelLayout.createSequentialGroup()
                        .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(OperacionesPanelLayout.createSequentialGroup()
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(idropa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(btnproveedores)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtidropa, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnropa))
                            .addGroup(OperacionesPanelLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(71, Short.MAX_VALUE))))
        );
        OperacionesPanelLayout.setVerticalGroup(
            OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperacionesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(OperacionesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id)
                            .addComponent(idropa)
                            .addComponent(txtIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnproveedores)
                            .addComponent(jLabel11)
                            .addComponent(txtidropa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnropa))
                        .addGap(18, 18, 18)
                        .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtMontoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtFechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(jLabel9)
                        .addGap(64, 64, 64))
                    .addComponent(txtDescripcionCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                .addGroup(OperacionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        paneles.addTab("Operaciones", OperacionesPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneles)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(paneles, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        paneles.setSelectedIndex(1);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnRestablecerTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestablecerTablaActionPerformed
        CargarTabla();
    }//GEN-LAST:event_btnRestablecerTablaActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        DefaultTableModel modelotabla = (DefaultTableModel) tablaCompras.getModel();
        modelotabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        String busqueda = txtBuscar.getText();
        if (busqueda.trim().equals("")) {
            CargarTabla();
        } else {
            int columnas;
            int[] anchos = {30, 100, 150, 40, 30, 60, 40, 70, 80, 124};
            for (int i = 0; i < tablaCompras.getColumnCount(); i++) {
                tablaCompras.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            try {
                Connection con = Conexion.getCon();
                String consultaSQL = "";
                String filtro = cmbfiltro.getSelectedItem().toString();
                if (filtro.equals("IdCompra")) {
                    consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE IdCompra ='" + busqueda + "' ";
                } else {
                    if (filtro.equals("IdProveedor")) {
                        consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE IdProveedor ='" + busqueda + "' ";
                    } else {
                        if (filtro.equals("FechaCompra")) {
                            consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE fechaCompra ='" + busqueda + "' ";
                        } else {
                            if (filtro.equals("MontoCompra")) {
                                consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE MontoCompra ='" + busqueda + "' ";
                            }
                        }
                    }
                }
                ps = con.prepareStatement(consultaSQL);
                rs = ps.executeQuery();
                rsmd = rs.getMetaData();
                columnas = rsmd.getColumnCount();
                while (rs.next()) {
                    Object[] fila = new Object[columnas];
                    for (int indice = 0; indice < columnas; indice++) {
                        fila[indice] = rs.getObject(indice + 1);
                    }
                    modelotabla.addRow(fila);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        DefaultTableModel modelotabla = (DefaultTableModel) tablaCompras.getModel();
        modelotabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        String busqueda = txtBuscar.getText();
        if (busqueda.trim().equals("")) {
            CargarTabla();
        } else {
            int columnas;
            int[] anchos = {30, 100, 150, 40, 30, 60, 40, 70, 80, 124};
            for (int i = 0; i < tablaCompras.getColumnCount(); i++) {
                tablaCompras.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            try {
                Connection con = Conexion.getCon();
                String consultaSQL = "";
                String filtro = cmbfiltro.getSelectedItem().toString();
                if (filtro.equals("IdCompra")) {
                    consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE IdCompra ='" + busqueda + "' ";
                } else {
                    if (filtro.equals("IdProveedor")) {
                        consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE IdProveedor ='" + busqueda + "' ";
                    } else {
                        if (filtro.equals("FechaCompra")) {
                            consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE fechaCompra ='" + busqueda + "' ";
                        } else {
                            if (filtro.equals("MontoCompra")) {
                                consultaSQL = "SELECT IdCompra, IdProveedor,idropa, FechaCompra,MontoCompra,cantidad ,DescripcionCompra from Compra WHERE MontoCompra ='" + busqueda + "' ";
                            }
                        }
                    }
                }
                ps = con.prepareStatement(consultaSQL);
                rs = ps.executeQuery();
                rsmd = rs.getMetaData();
                columnas = rsmd.getColumnCount();
                while (rs.next()) {
                    Object[] fila = new Object[columnas];
                    for (int indice = 0; indice < columnas; indice++) {
                        fila[indice] = rs.getObject(indice + 1);
                    }
                    modelotabla.addRow(fila);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        SQL_Compra modsql = new SQL_Compra();
        Compras mod = new Compras();
        Ropa mod2 = new Ropa();
        int idProveedor = Integer.parseInt(txtIdProveedor.getText());
        if (txtIdProveedor.equals("")) {
            JOptionPane.showMessageDialog(null, "Debes ingresar un proveedor");
        } else {
            mod.setIdProveedor(idProveedor);
            int idropa = Integer.parseInt(txtidropa.getText());
            if (txtidropa.equals("")) {
                JOptionPane.showMessageDialog(null, "Debes ingresar un producto");
            } else {
                mod.setIdropa(idropa);
                String MontoCompra = txtMontoCompra.getText();
                if (MontoCompra.equals("")) {
                    JOptionPane.showMessageDialog(null, "Debes ingresar el monto de la compra");
                } else {
                    mod.setMontoCompra(MontoCompra);
                    String FechaCompra = txtFechaCompra.getText();
                    if (txtFechaCompra.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Debes ingresar una fecha");
                    } else {
                        mod.setFechaCompra(FechaCompra);
                        String DescripcionCompra = txtDescripcionCompra.getText();
                        if (txtDescripcionCompra.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "Debes ingresar una descripcion");
                        } else {
                            mod.setDescripcionCompra(DescripcionCompra);
                            DefaultTableModel model = (DefaultTableModel) tablaCompras.getModel();
                            int cantidad = Integer.parseInt(txtcantidad.getText());
                            int existencias = modsql.existencias(idropa);
                            mod.setCantidad(cantidad);
                            cantidad = cantidad + existencias;
                            mod2.setExistencias(cantidad);
                            mod2.setIdropa(idropa);
                            if (modsql.Modificar(mod2)) {
                                if (modsql.Agregar(mod)) {
                                    JOptionPane.showMessageDialog(this, "Compra guardada", "Compras", JOptionPane.INFORMATION_MESSAGE);
                                    limpiar();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Error al guardar la Compra", "Compras", JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Error al guardar la compra", "Compras", JOptionPane.ERROR_MESSAGE);
                            }

                        }
                    }
                }
            }

        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        paneles.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tablaComprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaComprasMouseClicked
        //Este metodo es para que se le pueda hacer clic a la tabla
        try {
            int fila = tablaCompras.getSelectedRow();
            int id = Integer.parseInt(tablaCompras.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.getCon();
            String consultaSQL = " SELECT IdCompra, IdProveedor,idropa, FechaCompra, MontoCompra,cantidad, DescripcionCompra from Compra WHERE IdCompra =?;";
            ps = con.prepareStatement(consultaSQL);

            ps.setInt(1, id);
            rs = ps.executeQuery();
            while (rs.next()) {
                this.id.setText(String.valueOf(id));
                txtIdProveedor.setText(rs.getString(2));
                txtidropa.setText(rs.getString(3));
                txtFechaCompra.setText(rs.getString(4));
                txtMontoCompra.setText(rs.getString(5));
                txtcantidad.setText(rs.getString(6));
                txtDescripcionCompra.setText(rs.getString(7));

                DefaultTableModel modelotabla = (DefaultTableModel) tablaCompras.getModel();
                modelotabla.setRowCount(0);
                //Activar tab 0 y desactivar tab 1
                paneles.setSelectedIndex(1); // selecciona el tab(0)
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_tablaComprasMouseClicked

    private void btnproveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnproveedoresActionPerformed
        paraProveedores Jd = new paraProveedores(null,true);
        Jd.setVisible(true);
    }//GEN-LAST:event_btnproveedoresActionPerformed

    private void btnropaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnropaActionPerformed
        RopaInf2 Jd = new RopaInf2(null,true);
        Jd.setVisible(true);
    }//GEN-LAST:event_btnropaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDCompras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ListadoPanel;
    private javax.swing.JPanel OperacionesPanel;
    private javax.swing.JLabel Registros;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRestablecerTabla;
    private javax.swing.JButton btnproveedores;
    private javax.swing.JButton btnropa;
    private javax.swing.JComboBox<String> cmbfiltro;
    private javax.swing.JLabel id;
    private javax.swing.JLabel idropa;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane paneles;
    private javax.swing.JTable tablaCompras;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescripcionCompra;
    private javax.swing.JTextField txtFechaCompra;
    private javax.swing.JTextField txtIdProveedor;
    private javax.swing.JTextField txtMontoCompra;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtidropa;
    // End of variables declaration//GEN-END:variables
}
